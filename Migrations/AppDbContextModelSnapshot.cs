// <auto-generated />
using System;
using CitasClinica.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CitasClinica.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CitasClinica.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@myapp.com",
                            Password = "Admin123"
                        });
                });

            modelBuilder.Entity("CitasClinica.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_time");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2033, 1, 14, 4, 32, 37, 792, DateTimeKind.Local).AddTicks(1053),
                            DoctorId = 2,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2053, 1, 22, 17, 59, 32, 719, DateTimeKind.Local).AddTicks(6989),
                            DoctorId = 4,
                            PatientId = 4,
                            Status = "Cancelled"
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2032, 6, 7, 19, 22, 47, 415, DateTimeKind.Local).AddTicks(1033),
                            DoctorId = 1,
                            PatientId = 3,
                            Status = "Cancelled"
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2051, 1, 10, 8, 21, 26, 892, DateTimeKind.Local).AddTicks(5002),
                            DoctorId = 5,
                            PatientId = 5,
                            Status = "Cancelled"
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(2031, 6, 22, 12, 24, 38, 431, DateTimeKind.Local).AddTicks(5896),
                            DoctorId = 4,
                            PatientId = 3,
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("CitasClinica.Models.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("available");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_time");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Availabilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            DateTime = new DateTime(2026, 4, 18, 17, 34, 26, 636, DateTimeKind.Local).AddTicks(5371),
                            DoctorId = 4
                        },
                        new
                        {
                            Id = 2,
                            Available = false,
                            DateTime = new DateTime(2048, 2, 14, 14, 56, 44, 999, DateTimeKind.Local).AddTicks(1530),
                            DoctorId = 4
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            DateTime = new DateTime(2048, 10, 3, 19, 26, 17, 540, DateTimeKind.Local).AddTicks(2732),
                            DoctorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Available = false,
                            DateTime = new DateTime(2052, 12, 2, 11, 39, 16, 204, DateTimeKind.Local).AddTicks(1553),
                            DoctorId = 5
                        },
                        new
                        {
                            Id = 5,
                            Available = false,
                            DateTime = new DateTime(2042, 3, 14, 16, 0, 58, 396, DateTimeKind.Local).AddTicks(7095),
                            DoctorId = 3
                        });
                });

            modelBuilder.Entity("CitasClinica.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("specialty");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Orpha54@yahoo.com",
                            Name = "Xzavier Bruen",
                            Phone = "293-650-1169 x49506",
                            Specialty = "District Applications Planner"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Myrtle.Dooley26@hotmail.com",
                            Name = "Marcellus Kozey",
                            Phone = "373-257-5601",
                            Specialty = "International Applications Engineer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Kellie.VonRueden@yahoo.com",
                            Name = "Wilma Morissette",
                            Phone = "1-268-776-6463",
                            Specialty = "Investor Integration Analyst"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Mekhi20@gmail.com",
                            Name = "Isadore Kirlin",
                            Phone = "399-462-5566",
                            Specialty = "Central Web Orchestrator"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Miguel95@gmail.com",
                            Name = "Harmony Gleason",
                            Phone = "314.685.9171 x17203",
                            Specialty = "Principal Web Architect"
                        });
                });

            modelBuilder.Entity("CitasClinica.Models.HistoryDating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("appointment_id");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_time");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reason");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("HistoryDates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            DateTime = new DateTime(2024, 10, 15, 0, 18, 31, 34, DateTimeKind.Local).AddTicks(944),
                            Reason = "Praesentium et qui architecto corporis amet nobis repellat ducimus."
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 1,
                            DateTime = new DateTime(2024, 10, 12, 17, 49, 48, 294, DateTimeKind.Local).AddTicks(6921),
                            Reason = "Non ut fuga est."
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 2,
                            DateTime = new DateTime(2024, 1, 2, 19, 37, 48, 214, DateTimeKind.Local).AddTicks(4830),
                            Reason = "Nemo omnis harum eum aut esse."
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 1,
                            DateTime = new DateTime(2024, 6, 25, 23, 53, 51, 276, DateTimeKind.Local).AddTicks(7018),
                            Reason = "Qui dolores accusantium et voluptatem repudiandae blanditiis."
                        },
                        new
                        {
                            Id = 5,
                            AppointmentId = 2,
                            DateTime = new DateTime(2024, 4, 28, 11, 25, 52, 867, DateTimeKind.Local).AddTicks(2738),
                            Reason = "Suscipit suscipit quia ad numquam delectus facilis numquam expedita rerum."
                        });
                });

            modelBuilder.Entity("CitasClinica.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateBorn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_born");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBorn = new DateTime(1987, 6, 4, 19, 2, 14, 892, DateTimeKind.Local).AddTicks(9939),
                            Email = "Serena62@hotmail.com",
                            LastName = "Upton",
                            Name = "Johnathon",
                            Phone = "891.941.2410"
                        },
                        new
                        {
                            Id = 2,
                            DateBorn = new DateTime(2002, 4, 20, 23, 23, 1, 647, DateTimeKind.Local).AddTicks(8962),
                            Email = "Frieda.Trantow9@gmail.com",
                            LastName = "Hansen",
                            Name = "Rickey",
                            Phone = "869-736-9291 x766"
                        },
                        new
                        {
                            Id = 3,
                            DateBorn = new DateTime(1979, 3, 11, 19, 23, 36, 625, DateTimeKind.Local).AddTicks(7097),
                            Email = "Trevor_Purdy@hotmail.com",
                            LastName = "Breitenberg",
                            Name = "Eloy",
                            Phone = "724.631.6191"
                        },
                        new
                        {
                            Id = 4,
                            DateBorn = new DateTime(2003, 4, 19, 16, 14, 59, 450, DateTimeKind.Local).AddTicks(3063),
                            Email = "Marlee25@yahoo.com",
                            LastName = "Nicolas",
                            Name = "Isaias",
                            Phone = "1-232-361-8624 x2355"
                        },
                        new
                        {
                            Id = 5,
                            DateBorn = new DateTime(2000, 1, 27, 21, 51, 54, 722, DateTimeKind.Local).AddTicks(9749),
                            Email = "Astrid_Herman@gmail.com",
                            LastName = "Weissnat",
                            Name = "Brian",
                            Phone = "1-244-945-2788 x171"
                        });
                });

            modelBuilder.Entity("CitasClinica.Models.Appointment", b =>
                {
                    b.HasOne("CitasClinica.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CitasClinica.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("CitasClinica.Models.Availability", b =>
                {
                    b.HasOne("CitasClinica.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("CitasClinica.Models.HistoryDating", b =>
                {
                    b.HasOne("CitasClinica.Models.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });
#pragma warning restore 612, 618
        }
    }
}
